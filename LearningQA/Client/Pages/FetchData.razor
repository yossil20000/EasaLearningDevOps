@page "/fetchdata"
@using LearningQA.Shared
@using LearningQA.Client.Components
@using YLBlazor
@inject IPersonInfoPersist PersonInfoPersist
<h1>Weather forecast</h1>
<button type="button" @onclick="@ShowDialog">Show Dialog</button>
@if(bShowDialog)
{
    <div class="modal modal-fullscreen-sm-down" tabindex="-1" >
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Modal title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"  @onclick="@ShowDialog"></button>
      </div>
      <div class="modal-body">
        <p>Modal body text goes here.</p>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary">Save changes</button>
      </div>
    </div>
  </div>
</div>
}
<p>This component demonstrates fetching data from the server.</p>

@if (fetchDataViewModel == null || fetchDataViewModel.WeatherForecast == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h2>By using Regulat HTML table</h2>
    <table class="table bg-color-9">
        <thead>
            <tr>
                <th>Date</th>
                <th>Temp. (C)</th>
                <th>Temp. (F)</th>
                <th>Summary</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var forecast in fetchDataViewModel.WeatherForecast)
            {
                <tr>
                    <td>@forecast.Date.ToShortDateString()</td>
                    <td>@forecast.TemperatureC</td>
                    <td>@forecast.TemperatureF</td>
                    <td>@forecast.Summary</td>
                </tr>
            }
        </tbody>
    </table>
    <h2>By using GridComponent</h2>
    <LearningQA.Client.Components.Grid Items="fetchDataViewModel.WeatherForecast" Caption="TemperatureTable" class="table-bordered" RowClass='(row,index) => row.TemperatureF > 34 ? "table-info  bg-color-9" : ""'>
        <LearningQA.Client.Components.GridColumn TRowData="IWeatherForecast" Expression="c => c.Date" Format="d" />
        <LearningQA.Client.Components.GridColumn TRowData="IWeatherForecast" Expression="c => c.TemperatureC" />
        <LearningQA.Client.Components.GridColumn TRowData="IWeatherForecast" Title="Temp(F)">@context.TemperatureF F</LearningQA.Client.Components.GridColumn>
        <LearningQA.Client.Components.GridColumn TRowData="IWeatherForecast" Expression="c => c.Summary"  />
    </LearningQA.Client.Components.Grid>
    <YLBlazor.Component1/>
  
                       <YLBlazor.YLGrid.YLGrid Items="fetchDataViewModel.WeatherForecast" ColumnClass="yl-column-width-1-3 yl-column-width-2-5 yl-column-width-3-1 ">
                        <YLBlazor.YLGrid.YLGridGroup TRowData="IWeatherForecast" GroupClass="filed-width-min-5">
                            <YLBlazor.YLGrid.YLGridColumn TRowData="IWeatherForecast" Expression="c => c.Date" Format="d" />
                            <YLBlazor.YLGrid.YLGridColumn TRowData="IWeatherForecast" Expression="c => c.TemperatureC"  />
                            <YLYLBlazor.YLGridBlazor.YLGridColumn TRowData="IWeatherForecast" Expression="c => c.TemperatureF" />
                        </YLBlazor.YLGrid.YLGridGroup>

                        <YLBlazor.YLGrid.YLGridGroup TRowData="IWeatherForecast" GroupClass="filed-width-min-5">
                            <YLBlazor.YLGrid.YLGridColumn TRowData="IWeatherForecast" Title="Sumn" Expression="c => c.Summary" />
                        </YLBlazor.YLGrid.YLGridGroup>
                        <YLBlazor.YLGrid.YLGridGroup TRowData="IWeatherForecast" GroupClass="filed-width-min-5">
                            <YLBlazor.YLGrid.YLGridColumn TRowData="IWeatherForecast" Title="Action"  Expression="c => c.Id" Index="c => c.Id">
                                <input type="button"
                                       class="btn btn-outline-secondary color-2 bg-color-8"
                                       name="Load"
                                       value="Load" />
                            </YLBlazor.YLGrid.YLGridColumn>
                           <YLBlazor.YLGrid.YLGridColumn TRowData="IWeatherForecast" Title="Action" Expression="c => c.Id" Index="c => c.Id">
                               <input type="button"
                                       class="btn  btn-outline-secondary color-2 bg-color-8"
                                       name="Delete"
                                       value="Delete" />
                           </YLBlazor.YLGrid.YLGridColumn>
                        </YLBlazor.YLGrid.YLGridGroup>
                    </YLBlazor.YLGrid.YLGrid>   
                    
}


@code {
    private bool bShowDialog = true;
    private void ShowDialog()
    {
        bShowDialog = !bShowDialog;
    }
    private void OnEdit(object obj)
    {

        if (obj is IWeatherForecast item)
        {
            Console.WriteLine($"OnClick Edit whether {item.Date} {item.TemperatureC}");
        }
        else if (obj is string id)
        {
            Console.WriteLine($"OnClick Edit id:{id}");
        }
    }
}
