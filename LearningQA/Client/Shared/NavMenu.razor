@inject IPersonInfoPersist PersonInfoPersist
@using YLBlazor.CssCustomProperties.Services
@inject ICustomProperties CustomProperty
<div class="top-row pl-4 navbar navbar-dark" style="padding:0;">
    <a class="navbar-brand" href="">LearningQA</a>
    @if(PersonInfoPersist.SelectedPerson != null)
    {  
        <div style="display: flex; flex-direction:column;width:30%;">
            <label for="Them" style="text-align:center">Them Color</label>
            <input id="Them" type="range" min="1" max="72" @onchange="( ea => OnThemChanged(ea))"  value=@PersonInfoPersist.SelectedPerson.Preferance.Theme > 
        
        </div>
        <div style="display: flex; flex-direction:column;width:30%;">
            <label for="HUE" style="text-align:center">Them Hue</label>
            <input id="HUE" type="range" min="0" max="100" @onchange="( ea => OnHUEChanged(ea))"  value=@PersonInfoPersist.SelectedPerson.Preferance.HUE >        
        </div>
    }
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </li>
@*        <li class="nav-item px-3">
            <NavLink class="nav-link" href="counter">
                <span class="oi oi-plus" aria-hidden="true"></span> Counter
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="fetchdata">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Fetch data
            </NavLink>
        </li>*@
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="testlist">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Review
            </NavLink>
        </li>
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="testitem">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Test
            </NavLink>
        </li>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;
    Preferance<int> _preferance = new Preferance<int>(); 
    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;
    protected override void OnInitialized()
    {
        PersonInfoPersist.OnChanged(OnPersonalInfoChanged);
    }
    private void OnPersonalInfoChanged()
	{
		StateHasChanged();
	}
    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }
    private void OnThemChanged(ChangeEventArgs ea)
    {
        int value;
        value = int.TryParse(ea.Value.ToString(), out value) ? value : 42;
        _preferance.Theme = value;
        PersonInfoPersist.Preferance = new Preferance<int>() { Theme = _preferance.Theme, HUE = _preferance.HUE };
        
    }
    private async Task OnHUEChanged(ChangeEventArgs ea)
    {
        int value;
        value = int.TryParse(ea.Value.ToString(), out value) ? value : 42;
        _preferance.HUE = value;
        PersonInfoPersist.Preferance = new Preferance<int>() { Theme = _preferance.Theme, HUE = _preferance.HUE };
        await this.CustomProperty.SetRootPropertyAsync("--hue-percent", $"{_preferance.HUE}%");
        await this.CustomProperty.SetPropertyAsync(":root","--hue-percent", $"{_preferance.HUE}%");
    }
}
